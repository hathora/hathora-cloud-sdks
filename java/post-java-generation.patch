Index: java/src/main/java/com/hathora/client/model/PickRoomExcludeKeyofRoomAllocations.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/java/src/main/java/com/hathora/client/model/PickRoomExcludeKeyofRoomAllocations.java b/java/src/main/java/com/hathora/client/model/PickRoomExcludeKeyofRoomAllocations.java
--- a/java/src/main/java/com/hathora/client/model/PickRoomExcludeKeyofRoomAllocations.java	(revision 134743c8d694958d4b7ebc89c0274d5d032a0781)
+++ b/java/src/main/java/com/hathora/client/model/PickRoomExcludeKeyofRoomAllocations.java	(date 1695079593339)
@@ -325,8 +325,6 @@
       if (!jsonObj.get("roomConfig").isJsonPrimitive()) {
         throw new IllegalArgumentException(String.format("Expected the field `roomConfig` to be a primitive type in the JSON string but got `%s`", jsonObj.get("roomConfig").toString()));
       }
-      // validate the required field `currentAllocation`
-      RoomAllocation.validateJsonObject(jsonObj.getAsJsonObject("currentAllocation"));
   }
 
   public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
Index: java/src/main/java/com/hathora/client/model/Room.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/java/src/main/java/com/hathora/client/model/Room.java b/java/src/main/java/com/hathora/client/model/Room.java
--- a/java/src/main/java/com/hathora/client/model/Room.java	(revision 134743c8d694958d4b7ebc89c0274d5d032a0781)
+++ b/java/src/main/java/com/hathora/client/model/Room.java	(date 1695079611699)
@@ -356,8 +356,6 @@
           throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
         }
       }
-      // validate the required field `currentAllocation`
-      RoomAllocation.validateJsonObject(jsonObj.getAsJsonObject("currentAllocation"));
       // ensure the json data is an array
       if (!jsonObj.get("allocations").isJsonArray()) {
         throw new IllegalArgumentException(String.format("Expected the field `allocations` to be an array in the JSON string but got `%s`", jsonObj.get("allocations").toString()));
@@ -366,9 +366,6 @@ public class Room {
       for (int i = 0; i < jsonArrayallocations.size(); i++) {
         RoomAllocation.validateJsonObject(jsonArrayallocations.get(i).getAsJsonObject());
       };
-      if (!jsonObj.get("roomConfig").isJsonPrimitive()) {
-        throw new IllegalArgumentException(String.format("Expected the field `roomConfig` to be a primitive type in the JSON string but got `%s`", jsonObj.get("roomConfig").toString()));
-      }
       if (!jsonObj.get("roomId").isJsonPrimitive()) {
         throw new IllegalArgumentException(String.format("Expected the field `roomId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("roomId").toString()));
       }
