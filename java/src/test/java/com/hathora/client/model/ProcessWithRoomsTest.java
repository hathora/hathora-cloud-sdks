/*
 * hathora-coordinator
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hathora.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.hathora.client.model.PickRoomExcludeKeyofRoomAllocations;
import com.hathora.client.model.Region;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for ProcessWithRooms
 */
public class ProcessWithRoomsTest {
    private final ProcessWithRooms model = new ProcessWithRooms();

    /**
     * Model tests for ProcessWithRooms
     */
    @Test
    public void testProcessWithRooms() {
        // TODO: test ProcessWithRooms
    }

    /**
     * Test the property 'egressedBytes'
     */
    @Test
    public void egressedBytesTest() {
        // TODO: test egressedBytes
    }

    /**
     * Test the property 'idleSince'
     */
    @Test
    public void idleSinceTest() {
        // TODO: test idleSince
    }

    /**
     * Test the property 'activeConnections'
     */
    @Test
    public void activeConnectionsTest() {
        // TODO: test activeConnections
    }

    /**
     * Test the property 'roomSlotsAvailable'
     */
    @Test
    public void roomSlotsAvailableTest() {
        // TODO: test roomSlotsAvailable
    }

    /**
     * Test the property 'draining'
     */
    @Test
    public void drainingTest() {
        // TODO: test draining
    }

    /**
     * Test the property 'terminatedAt'
     */
    @Test
    public void terminatedAtTest() {
        // TODO: test terminatedAt
    }

    /**
     * Test the property 'stoppingAt'
     */
    @Test
    public void stoppingAtTest() {
        // TODO: test stoppingAt
    }

    /**
     * Test the property 'startedAt'
     */
    @Test
    public void startedAtTest() {
        // TODO: test startedAt
    }

    /**
     * Test the property 'startingAt'
     */
    @Test
    public void startingAtTest() {
        // TODO: test startingAt
    }

    /**
     * Test the property 'roomsPerProcess'
     */
    @Test
    public void roomsPerProcessTest() {
        // TODO: test roomsPerProcess
    }

    /**
     * Test the property 'port'
     */
    @Test
    public void portTest() {
        // TODO: test port
    }

    /**
     * Test the property 'host'
     */
    @Test
    public void hostTest() {
        // TODO: test host
    }

    /**
     * Test the property 'region'
     */
    @Test
    public void regionTest() {
        // TODO: test region
    }

    /**
     * Test the property 'processId'
     */
    @Test
    public void processIdTest() {
        // TODO: test processId
    }

    /**
     * Test the property 'deploymentId'
     */
    @Test
    public void deploymentIdTest() {
        // TODO: test deploymentId
    }

    /**
     * Test the property 'appId'
     */
    @Test
    public void appIdTest() {
        // TODO: test appId
    }

    /**
     * Test the property 'rooms'
     */
    @Test
    public void roomsTest() {
        // TODO: test rooms
    }

    /**
     * Test the property 'totalRooms'
     */
    @Test
    public void totalRoomsTest() {
        // TODO: test totalRooms
    }

}
