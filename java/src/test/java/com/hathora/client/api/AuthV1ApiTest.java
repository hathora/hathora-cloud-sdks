/*
 * Hathora Cloud API
 * Welcome to the Hathora Cloud API documentation! Learn how to use the Hathora Cloud APIs to build and scale your game servers globally.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hathora.client.api;

import com.hathora.client.ApiException;
import com.hathora.client.model.ApiError;
import com.hathora.client.model.LoginGoogleRequest;
import com.hathora.client.model.LoginNicknameRequest;
import com.hathora.client.model.LoginResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthV1Api
 */
@Disabled
public class AuthV1ApiTest {

    private final AuthV1Api api = new AuthV1Api();

    /**
     * Returns a unique player token for an anonymous user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loginAnonymousTest() throws ApiException {
        String appId = null;
        LoginResponse response = api.loginAnonymous(appId);
        // TODO: test validations
    }

    /**
     * Returns a unique player token using a Google-signed OIDC &#x60;idToken&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loginGoogleTest() throws ApiException {
        String appId = null;
        LoginGoogleRequest loginGoogleRequest = null;
        LoginResponse response = api.loginGoogle(appId, loginGoogleRequest);
        // TODO: test validations
    }

    /**
     * Returns a unique player token with a specified nickname for a user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void loginNicknameTest() throws ApiException {
        String appId = null;
        LoginNicknameRequest loginNicknameRequest = null;
        LoginResponse response = api.loginNickname(appId, loginNicknameRequest);
        // TODO: test validations
    }

}
