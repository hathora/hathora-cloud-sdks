/*
 * Hathora Cloud API
 * Welcome to the Hathora Cloud API documentation! Learn how to use the Hathora Cloud APIs to build and scale your game servers globally.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.hathora.client.api;

import com.hathora.client.ApiException;
import com.hathora.client.model.ApiError;
import com.hathora.client.model.ConnectionInfoV2;
import com.hathora.client.model.CreateRoomParams;
import com.hathora.client.model.CreateRoomResponse;
import com.hathora.client.model.PickRoomExcludeKeyofRoomAllocations;
import com.hathora.client.model.Room;
import com.hathora.client.model.UpdateRoomConfigParams;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RoomV2Api
 */
@Disabled
public class RoomV2ApiTest {

    private final RoomV2Api api = new RoomV2Api();

    /**
     * Create a new [room](https://hathora.dev/docs/concepts/hathora-entities#room) for an existing [application](https://hathora.dev/docs/concepts/hathora-entities#application). Poll the [&#x60;GetConnectionInfo()&#x60;](https://hathora.dev/api#tag/RoomV2/operation/GetConnectionInfo) endpoint to get connection details for an active room.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRoomTest() throws ApiException {
        String appId = null;
        CreateRoomParams createRoomParams = null;
        String roomId = null;
        CreateRoomResponse response = api.createRoom(appId, createRoomParams, roomId);
        // TODO: test validations
    }

    /**
     * Destroy a [room](https://hathora.dev/docs/concepts/hathora-entities#room). All associated metadata is deleted.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void destroyRoomTest() throws ApiException {
        String appId = null;
        String roomId = null;
        api.destroyRoom(appId, roomId);
        // TODO: test validations
    }

    /**
     * Get all active [rooms](https://hathora.dev/docs/concepts/hathora-entities#room) for a given [process](https://hathora.dev/docs/concepts/hathora-entities#process).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getActiveRoomsForProcessTest() throws ApiException {
        String appId = null;
        String processId = null;
        List<PickRoomExcludeKeyofRoomAllocations> response = api.getActiveRoomsForProcess(appId, processId);
        // TODO: test validations
    }

    /**
     * Poll this endpoint to get connection details to a [room](https://hathora.dev/docs/concepts/hathora-entities#room). Clients can call this endpoint without authentication.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConnectionInfoTest() throws ApiException {
        String appId = null;
        String roomId = null;
        ConnectionInfoV2 response = api.getConnectionInfo(appId, roomId);
        // TODO: test validations
    }

    /**
     * Get all inactive [rooms](https://hathora.dev/docs/concepts/hathora-entities#room) for a given [process](https://hathora.dev/docs/concepts/hathora-entities#process).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInactiveRoomsForProcessTest() throws ApiException {
        String appId = null;
        String processId = null;
        List<PickRoomExcludeKeyofRoomAllocations> response = api.getInactiveRoomsForProcess(appId, processId);
        // TODO: test validations
    }

    /**
     * Retreive current and historical allocation data for a [room](https://hathora.dev/docs/concepts/hathora-entities#room).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRoomInfoTest() throws ApiException {
        String appId = null;
        String roomId = null;
        Room response = api.getRoomInfo(appId, roomId);
        // TODO: test validations
    }

    /**
     * Suspend a [room](https://hathora.dev/docs/concepts/hathora-entities#room). The room is unallocated from the process but can be rescheduled later using the same &#x60;roomId&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void suspendRoomTest() throws ApiException {
        String appId = null;
        String roomId = null;
        api.suspendRoom(appId, roomId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateRoomConfigTest() throws ApiException {
        String appId = null;
        String roomId = null;
        UpdateRoomConfigParams updateRoomConfigParams = null;
        api.updateRoomConfig(appId, roomId, updateRoomConfigParams);
        // TODO: test validations
    }

}
