/* tslint:disable */
/* eslint-disable */
/**
 * Hathora Cloud API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Region } from './Region';
import {
    RegionFromJSON,
    RegionFromJSONTyped,
    RegionToJSON,
} from './Region';

/**
 * 
 * @export
 * @interface BuildRegionalContainerTagsInner
 */
export interface BuildRegionalContainerTagsInner {
    /**
     * 
     * @type {string}
     * @memberof BuildRegionalContainerTagsInner
     */
    containerTag: string;
    /**
     * 
     * @type {Region}
     * @memberof BuildRegionalContainerTagsInner
     */
    region: Region;
}

/**
 * Check if a given object implements the BuildRegionalContainerTagsInner interface.
 */
export function instanceOfBuildRegionalContainerTagsInner(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "containerTag" in value;
    isInstance = isInstance && "region" in value;

    return isInstance;
}

export function BuildRegionalContainerTagsInnerFromJSON(json: any): BuildRegionalContainerTagsInner {
    return BuildRegionalContainerTagsInnerFromJSONTyped(json, false);
}

export function BuildRegionalContainerTagsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): BuildRegionalContainerTagsInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'containerTag': json['containerTag'],
        'region': RegionFromJSON(json['region']),
    };
}

export function BuildRegionalContainerTagsInnerToJSON(value?: BuildRegionalContainerTagsInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'containerTag': value.containerTag,
        'region': RegionToJSON(value.region),
    };
}

