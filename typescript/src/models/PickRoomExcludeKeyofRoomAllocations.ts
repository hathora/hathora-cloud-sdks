/* tslint:disable */
/* eslint-disable */
/**
 * Hathora Cloud API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoomAllocation } from './RoomAllocation';
import {
    RoomAllocationFromJSON,
    RoomAllocationFromJSONTyped,
    RoomAllocationToJSON,
} from './RoomAllocation';
import type { RoomStatus } from './RoomStatus';
import {
    RoomStatusFromJSON,
    RoomStatusFromJSONTyped,
    RoomStatusToJSON,
} from './RoomStatus';

/**
 * From T, pick a set of properties whose keys are in the union K
 * @export
 * @interface PickRoomExcludeKeyofRoomAllocations
 */
export interface PickRoomExcludeKeyofRoomAllocations {
    /**
     * 
     * @type {string}
     * @memberof PickRoomExcludeKeyofRoomAllocations
     */
    appId: string;
    /**
     * 
     * @type {string}
     * @memberof PickRoomExcludeKeyofRoomAllocations
     */
    roomId: string;
    /**
     * 
     * @type {RoomStatus}
     * @memberof PickRoomExcludeKeyofRoomAllocations
     */
    status: RoomStatus;
    /**
     * 
     * @type {RoomAllocation}
     * @memberof PickRoomExcludeKeyofRoomAllocations
     */
    currentAllocation: RoomAllocation | null;
}

/**
 * Check if a given object implements the PickRoomExcludeKeyofRoomAllocations interface.
 */
export function instanceOfPickRoomExcludeKeyofRoomAllocations(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "appId" in value;
    isInstance = isInstance && "roomId" in value;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "currentAllocation" in value;

    return isInstance;
}

export function PickRoomExcludeKeyofRoomAllocationsFromJSON(json: any): PickRoomExcludeKeyofRoomAllocations {
    return PickRoomExcludeKeyofRoomAllocationsFromJSONTyped(json, false);
}

export function PickRoomExcludeKeyofRoomAllocationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PickRoomExcludeKeyofRoomAllocations {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'appId': json['appId'],
        'roomId': json['roomId'],
        'status': RoomStatusFromJSON(json['status']),
        'currentAllocation': RoomAllocationFromJSON(json['currentAllocation']),
    };
}

export function PickRoomExcludeKeyofRoomAllocationsToJSON(value?: PickRoomExcludeKeyofRoomAllocations | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'appId': value.appId,
        'roomId': value.roomId,
        'status': RoomStatusToJSON(value.status),
        'currentAllocation': RoomAllocationToJSON(value.currentAllocation),
    };
}

