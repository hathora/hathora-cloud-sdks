/* tslint:disable */
/* eslint-disable */
/**
 * Hathora Cloud API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Region } from './Region';
import {
    RegionFromJSON,
    RegionFromJSONTyped,
    RegionToJSON,
} from './Region';

/**
 * 
 * @export
 * @interface CreateLobbyRequest
 */
export interface CreateLobbyRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateLobbyRequest
     */
    visibility: CreateLobbyRequestVisibilityEnum;
    /**
     * 
     * @type {object}
     * @memberof CreateLobbyRequest
     */
    initialConfig: object;
    /**
     * 
     * @type {Region}
     * @memberof CreateLobbyRequest
     */
    region: Region;
}


/**
 * @export
 */
export const CreateLobbyRequestVisibilityEnum = {
    Public: 'public',
    Private: 'private',
    Local: 'local'
} as const;
export type CreateLobbyRequestVisibilityEnum = typeof CreateLobbyRequestVisibilityEnum[keyof typeof CreateLobbyRequestVisibilityEnum];


/**
 * Check if a given object implements the CreateLobbyRequest interface.
 */
export function instanceOfCreateLobbyRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "visibility" in value;
    isInstance = isInstance && "initialConfig" in value;
    isInstance = isInstance && "region" in value;

    return isInstance;
}

export function CreateLobbyRequestFromJSON(json: any): CreateLobbyRequest {
    return CreateLobbyRequestFromJSONTyped(json, false);
}

export function CreateLobbyRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateLobbyRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'visibility': json['visibility'],
        'initialConfig': json['initialConfig'],
        'region': RegionFromJSON(json['region']),
    };
}

export function CreateLobbyRequestToJSON(value?: CreateLobbyRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'visibility': value.visibility,
        'initialConfig': value.initialConfig,
        'region': RegionToJSON(value.region),
    };
}

