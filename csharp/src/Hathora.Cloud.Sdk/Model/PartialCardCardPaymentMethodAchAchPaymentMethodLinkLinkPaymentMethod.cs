/*
 * Hathora Cloud API
 *
 * Welcome to the Hathora Cloud API documentation! Learn how to use the Hathora Cloud APIs to build and scale your game servers globally.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = Hathora.Cloud.Sdk.Client.OpenAPIDateConverter;

namespace Hathora.Cloud.Sdk.Model
{
    /// <summary>
    /// Make all properties in T optional
    /// </summary>
    [DataContract(Name = "Partial__card-CardPaymentMethod--ach-AchPaymentMethod--link-LinkPaymentMethod--__")]
    public partial class PartialCardCardPaymentMethodAchAchPaymentMethodLinkLinkPaymentMethod : IEquatable<PartialCardCardPaymentMethodAchAchPaymentMethodLinkLinkPaymentMethod>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PartialCardCardPaymentMethodAchAchPaymentMethodLinkLinkPaymentMethod" /> class.
        /// </summary>
        /// <param name="card">card.</param>
        /// <param name="ach">ach.</param>
        /// <param name="link">link.</param>
        public PartialCardCardPaymentMethodAchAchPaymentMethodLinkLinkPaymentMethod(CardPaymentMethod card = default(CardPaymentMethod), AchPaymentMethod ach = default(AchPaymentMethod), LinkPaymentMethod link = default(LinkPaymentMethod))
        {
            this.Card = card;
            this.Ach = ach;
            this.Link = link;
            this.AdditionalProperties = new Dictionary<string, object>();
        }

        /// <summary>
        /// Gets or Sets Card
        /// </summary>
        [DataMember(Name = "card", EmitDefaultValue = false)]
        public CardPaymentMethod Card { get; set; }

        /// <summary>
        /// Gets or Sets Ach
        /// </summary>
        [DataMember(Name = "ach", EmitDefaultValue = false)]
        public AchPaymentMethod Ach { get; set; }

        /// <summary>
        /// Gets or Sets Link
        /// </summary>
        [DataMember(Name = "link", EmitDefaultValue = false)]
        public LinkPaymentMethod Link { get; set; }

        /// <summary>
        /// Gets or Sets additional properties
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PartialCardCardPaymentMethodAchAchPaymentMethodLinkLinkPaymentMethod {\n");
            sb.Append("  Card: ").Append(Card).Append("\n");
            sb.Append("  Ach: ").Append(Ach).Append("\n");
            sb.Append("  Link: ").Append(Link).Append("\n");
            sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PartialCardCardPaymentMethodAchAchPaymentMethodLinkLinkPaymentMethod);
        }

        /// <summary>
        /// Returns true if PartialCardCardPaymentMethodAchAchPaymentMethodLinkLinkPaymentMethod instances are equal
        /// </summary>
        /// <param name="input">Instance of PartialCardCardPaymentMethodAchAchPaymentMethodLinkLinkPaymentMethod to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PartialCardCardPaymentMethodAchAchPaymentMethodLinkLinkPaymentMethod input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Card == input.Card ||
                    (this.Card != null &&
                    this.Card.Equals(input.Card))
                ) && 
                (
                    this.Ach == input.Ach ||
                    (this.Ach != null &&
                    this.Ach.Equals(input.Ach))
                ) && 
                (
                    this.Link == input.Link ||
                    (this.Link != null &&
                    this.Link.Equals(input.Link))
                )
                && (this.AdditionalProperties.Count == input.AdditionalProperties.Count && !this.AdditionalProperties.Except(input.AdditionalProperties).Any());
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Card != null)
                {
                    hashCode = (hashCode * 59) + this.Card.GetHashCode();
                }
                if (this.Ach != null)
                {
                    hashCode = (hashCode * 59) + this.Ach.GetHashCode();
                }
                if (this.Link != null)
                {
                    hashCode = (hashCode * 59) + this.Link.GetHashCode();
                }
                if (this.AdditionalProperties != null)
                {
                    hashCode = (hashCode * 59) + this.AdditionalProperties.GetHashCode();
                }
                return hashCode;
            }
        }

    }

}
