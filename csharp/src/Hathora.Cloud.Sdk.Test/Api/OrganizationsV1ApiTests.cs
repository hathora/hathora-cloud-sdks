/*
 * Hathora Cloud API
 *
 * Welcome to the Hathora Cloud API documentation! Learn how to use the Hathora Cloud APIs to build and scale your game servers globally.
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using NUnit.Framework;

using Hathora.Cloud.Sdk.Client;
using Hathora.Cloud.Sdk.Api;
// uncomment below to import models
//using Hathora.Cloud.Sdk.Model;

namespace Hathora.Cloud.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing OrganizationsV1Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class OrganizationsV1ApiTests : IDisposable
    {
        private OrganizationsV1Api instance;

        public OrganizationsV1ApiTests()
        {
            instance = new OrganizationsV1Api();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OrganizationsV1Api
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' OrganizationsV1Api
            //Assert.IsType<OrganizationsV1Api>(instance);
        }

        /// <summary>
        /// Test AcceptInvite
        /// </summary>
        [Test]
        public void AcceptInviteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orgId = null;
            //instance.AcceptInvite(orgId);
        }

        /// <summary>
        /// Test GetOrgPendingInvites
        /// </summary>
        [Test]
        public void GetOrgPendingInvitesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orgId = null;
            //var response = instance.GetOrgPendingInvites(orgId);
            //Assert.IsType<OrgInvitesPage>(response);
        }

        /// <summary>
        /// Test GetUserPendingInvites
        /// </summary>
        [Test]
        public void GetUserPendingInvitesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetUserPendingInvites();
            //Assert.IsType<OrgInvitesPage>(response);
        }

        /// <summary>
        /// Test InviteUser
        /// </summary>
        [Test]
        public void InviteUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orgId = null;
            //CreateUserInvite createUserInvite = null;
            //var response = instance.InviteUser(orgId, createUserInvite);
            //Assert.IsType<OrgPermission>(response);
        }

        /// <summary>
        /// Test RejectInvite
        /// </summary>
        [Test]
        public void RejectInviteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orgId = null;
            //instance.RejectInvite(orgId);
        }

        /// <summary>
        /// Test RescindInvite
        /// </summary>
        [Test]
        public void RescindInviteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string orgId = null;
            //RescindUserInvite rescindUserInvite = null;
            //instance.RescindInvite(orgId, rescindUserInvite);
        }
    }
}
